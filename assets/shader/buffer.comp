#version 450 core



layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 1) uniform image2DArray vpb;
layout(rgba32f, binding = 2) uniform image2DArray vdb;
layout(rgba32f, binding = 3) uniform image2DArray lb;
layout(rgba32f, binding = 4) uniform image2DArray ldb;
layout(rgba32f, binding = 5) uniform image2DArray cb;
layout(rgba32f, binding = 6) uniform image2DArray mb;

//layout(rgba32f, binding = 6) uniform imageCube env;

//uniform vec3 voxelSize;
//uniform vec3 lightVSPos;
//uniform vec3 lightColor;

//uniform mat4 viewMatrix;
//uniform vec4 viewPos;
//uniform vec3 viewDir;
//uniform float sphereRadius;
//uniform vec3 middleOfPlaneVS;
//uniform float planeDistance;
//uniform vec2 planeSides;
//uniform float planeWidth;
//uniform float planeHeight;

float rand(vec2 co){
    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);
}

void main() {
  
  ivec3 pixel_coords = ivec3(gl_GlobalInvocationID.xyz); 
  
  //vec3 size = vec3(planeSides/0.5, 1);
  
  //vec3 pixelPos = middleOfPlaneVS + vec3(-0.5 + pixel_coords.x/planeWidth, -0.5 + pixel_coords.y/planeHeight, 0) * size;

  //imageStore(vpb, pixel_coords, vec4(pixelPos,1.0));
  //imageStore(vdb, pixel_coords, vec4(0.0,0.0,-1.0, 0.0));
  //imageStore(lb, pixel_coords, vec4(lightColor, 1.0));
  //imageStore(ldb, pixel_coords, vec4(normalize(middleOfPlaneVS-lightVSPos), 0.0));
  
  imageStore(vpb, pixel_coords, vec4(3.0));
  imageStore(vdb, pixel_coords, vec4(0.0,0.0,-1.0, 0.0));
  imageStore(lb, pixel_coords, vec4(8.0));
  imageStore(ldb, pixel_coords, vec4(4.0));
  imageStore(mb, pixel_coords, vec4(8.0));
  imageStore(cb, pixel_coords, vec4(0.5, pixel_coords.z, 0.4, 1.0));

  //imageStore(env, ivec3(pixel_coords.xy, pixel_coords.z * 3), vec4(0.0));
  //imageStore(env, ivec3(pixel_coords.xy, pixel_coords.z * 3 + 1), vec4(0.0));
  //imageStore(env, ivec3(pixel_coords.xy, pixel_coords.z * 3 + 2), vec4(0.0));

}